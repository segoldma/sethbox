name: Persist dbt Manifest

on:
  push:
    branches:
      - main

permissions:
  contents: write  # Explicitly grant write permissions to the GITHUB_TOKEN

jobs:
  persist_manifest:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout main branch
      uses: actions/checkout@v2
      with:
        ref: main
        persist-credentials: false  # Disable automatic token persistence

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dbt
      run: |
        pip install dbt-bigquery

    - name: Set up environment variables and write service account key
      env:
        CICD_SERVICE_ACCOUNT: ${{ secrets.CICD_SERVICE_ACCOUNT }}
      run: |
        printf "%s" "${CICD_SERVICE_ACCOUNT}" > /tmp/service_account.json

    - name: Create dbt profiles directory
      run: mkdir -p ~/.dbt

    - name: Generate profiles.yml
      env:
        CICD_DATASET: ${{ secrets.CICD_DATASET }}
        CICD_LOCATION: ${{ secrets.CICD_LOCATION }}
        CICD_PRIORITY: ${{ secrets.CICD_PRIORITY }}
        CICD_PROJECT: ${{ secrets.CICD_PROJECT }}
      run: |
        cat <<EOF > ~/.dbt/profiles.yml
        sethbox:
          target: ci
          outputs:
            ci:
              dataset: "$CICD_DATASET"
              keyfile: "/tmp/service_account.json"
              location: "$CICD_LOCATION"
              priority: "$CICD_PRIORITY"
              project: "$CICD_PROJECT"
              type: bigquery
              method: service-account
              job_execution_timeout_seconds: 300
              job_retries: 1
              threads: 16
        EOF

    - name: Display profiles.yml for debugging
      run: |
        cat ~/.dbt/profiles.yml

    - name: Run dbt to generate manifest
      run: |
        dbt deps --profiles-dir ~/.dbt
        dbt compile --profiles-dir ~/.dbt

    - name: Checkout manifests branch
      run: |
        git fetch origin
        if git branch -a | grep 'remotes/origin/manifests'; then
          git checkout manifests
          git merge origin/main --no-edit || true
        else
          git checkout -b manifests
        fi

    - name: Create manifests directory
      run: |
        mkdir -p manifests

    - name: Copy new manifest
      run: |
        cp target/manifest.json manifests/previous_manifest.json

    - name: Commit and push changes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add manifests/previous_manifest.json
        git commit -m "Update previous manifest"
        git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git manifests
